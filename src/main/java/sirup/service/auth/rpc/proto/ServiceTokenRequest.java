// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sirup_auth.proto

package sirup.service.auth.rpc.proto;

/**
 * Protobuf type {@code auth.v4.ServiceTokenRequest}
 */
public  final class ServiceTokenRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:auth.v4.ServiceTokenRequest)
    ServiceTokenRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ServiceTokenRequest.newBuilder() to construct.
  private ServiceTokenRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ServiceTokenRequest() {
    adminToken_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ServiceTokenRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            sirup.service.auth.rpc.proto.CredentialsRpc.Builder subBuilder = null;
            if (adminCredentials_ != null) {
              subBuilder = adminCredentials_.toBuilder();
            }
            adminCredentials_ = input.readMessage(sirup.service.auth.rpc.proto.CredentialsRpc.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(adminCredentials_);
              adminCredentials_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            adminToken_ = s;
            break;
          }
          case 26: {
            sirup.service.auth.rpc.proto.CredentialsRpc.Builder subBuilder = null;
            if (serviceCredentials_ != null) {
              subBuilder = serviceCredentials_.toBuilder();
            }
            serviceCredentials_ = input.readMessage(sirup.service.auth.rpc.proto.CredentialsRpc.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(serviceCredentials_);
              serviceCredentials_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return sirup.service.auth.rpc.proto.Auth.internal_static_auth_v4_ServiceTokenRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return sirup.service.auth.rpc.proto.Auth.internal_static_auth_v4_ServiceTokenRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            sirup.service.auth.rpc.proto.ServiceTokenRequest.class, sirup.service.auth.rpc.proto.ServiceTokenRequest.Builder.class);
  }

  public static final int ADMIN_CREDENTIALS_FIELD_NUMBER = 1;
  private sirup.service.auth.rpc.proto.CredentialsRpc adminCredentials_;
  /**
   * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
   */
  public boolean hasAdminCredentials() {
    return adminCredentials_ != null;
  }
  /**
   * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
   */
  public sirup.service.auth.rpc.proto.CredentialsRpc getAdminCredentials() {
    return adminCredentials_ == null ? sirup.service.auth.rpc.proto.CredentialsRpc.getDefaultInstance() : adminCredentials_;
  }
  /**
   * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
   */
  public sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder getAdminCredentialsOrBuilder() {
    return getAdminCredentials();
  }

  public static final int ADMIN_TOKEN_FIELD_NUMBER = 2;
  private volatile java.lang.Object adminToken_;
  /**
   * <code>string admin_token = 2;</code>
   */
  public java.lang.String getAdminToken() {
    java.lang.Object ref = adminToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      adminToken_ = s;
      return s;
    }
  }
  /**
   * <code>string admin_token = 2;</code>
   */
  public com.google.protobuf.ByteString
      getAdminTokenBytes() {
    java.lang.Object ref = adminToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      adminToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICE_CREDENTIALS_FIELD_NUMBER = 3;
  private sirup.service.auth.rpc.proto.CredentialsRpc serviceCredentials_;
  /**
   * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
   */
  public boolean hasServiceCredentials() {
    return serviceCredentials_ != null;
  }
  /**
   * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
   */
  public sirup.service.auth.rpc.proto.CredentialsRpc getServiceCredentials() {
    return serviceCredentials_ == null ? sirup.service.auth.rpc.proto.CredentialsRpc.getDefaultInstance() : serviceCredentials_;
  }
  /**
   * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
   */
  public sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder getServiceCredentialsOrBuilder() {
    return getServiceCredentials();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (adminCredentials_ != null) {
      output.writeMessage(1, getAdminCredentials());
    }
    if (!getAdminTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, adminToken_);
    }
    if (serviceCredentials_ != null) {
      output.writeMessage(3, getServiceCredentials());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (adminCredentials_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAdminCredentials());
    }
    if (!getAdminTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, adminToken_);
    }
    if (serviceCredentials_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getServiceCredentials());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof sirup.service.auth.rpc.proto.ServiceTokenRequest)) {
      return super.equals(obj);
    }
    sirup.service.auth.rpc.proto.ServiceTokenRequest other = (sirup.service.auth.rpc.proto.ServiceTokenRequest) obj;

    boolean result = true;
    result = result && (hasAdminCredentials() == other.hasAdminCredentials());
    if (hasAdminCredentials()) {
      result = result && getAdminCredentials()
          .equals(other.getAdminCredentials());
    }
    result = result && getAdminToken()
        .equals(other.getAdminToken());
    result = result && (hasServiceCredentials() == other.hasServiceCredentials());
    if (hasServiceCredentials()) {
      result = result && getServiceCredentials()
          .equals(other.getServiceCredentials());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAdminCredentials()) {
      hash = (37 * hash) + ADMIN_CREDENTIALS_FIELD_NUMBER;
      hash = (53 * hash) + getAdminCredentials().hashCode();
    }
    hash = (37 * hash) + ADMIN_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getAdminToken().hashCode();
    if (hasServiceCredentials()) {
      hash = (37 * hash) + SERVICE_CREDENTIALS_FIELD_NUMBER;
      hash = (53 * hash) + getServiceCredentials().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static sirup.service.auth.rpc.proto.ServiceTokenRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(sirup.service.auth.rpc.proto.ServiceTokenRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code auth.v4.ServiceTokenRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:auth.v4.ServiceTokenRequest)
      sirup.service.auth.rpc.proto.ServiceTokenRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return sirup.service.auth.rpc.proto.Auth.internal_static_auth_v4_ServiceTokenRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return sirup.service.auth.rpc.proto.Auth.internal_static_auth_v4_ServiceTokenRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              sirup.service.auth.rpc.proto.ServiceTokenRequest.class, sirup.service.auth.rpc.proto.ServiceTokenRequest.Builder.class);
    }

    // Construct using sirup.service.auth.rpc.proto.ServiceTokenRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (adminCredentialsBuilder_ == null) {
        adminCredentials_ = null;
      } else {
        adminCredentials_ = null;
        adminCredentialsBuilder_ = null;
      }
      adminToken_ = "";

      if (serviceCredentialsBuilder_ == null) {
        serviceCredentials_ = null;
      } else {
        serviceCredentials_ = null;
        serviceCredentialsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return sirup.service.auth.rpc.proto.Auth.internal_static_auth_v4_ServiceTokenRequest_descriptor;
    }

    @java.lang.Override
    public sirup.service.auth.rpc.proto.ServiceTokenRequest getDefaultInstanceForType() {
      return sirup.service.auth.rpc.proto.ServiceTokenRequest.getDefaultInstance();
    }

    @java.lang.Override
    public sirup.service.auth.rpc.proto.ServiceTokenRequest build() {
      sirup.service.auth.rpc.proto.ServiceTokenRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public sirup.service.auth.rpc.proto.ServiceTokenRequest buildPartial() {
      sirup.service.auth.rpc.proto.ServiceTokenRequest result = new sirup.service.auth.rpc.proto.ServiceTokenRequest(this);
      if (adminCredentialsBuilder_ == null) {
        result.adminCredentials_ = adminCredentials_;
      } else {
        result.adminCredentials_ = adminCredentialsBuilder_.build();
      }
      result.adminToken_ = adminToken_;
      if (serviceCredentialsBuilder_ == null) {
        result.serviceCredentials_ = serviceCredentials_;
      } else {
        result.serviceCredentials_ = serviceCredentialsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof sirup.service.auth.rpc.proto.ServiceTokenRequest) {
        return mergeFrom((sirup.service.auth.rpc.proto.ServiceTokenRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(sirup.service.auth.rpc.proto.ServiceTokenRequest other) {
      if (other == sirup.service.auth.rpc.proto.ServiceTokenRequest.getDefaultInstance()) return this;
      if (other.hasAdminCredentials()) {
        mergeAdminCredentials(other.getAdminCredentials());
      }
      if (!other.getAdminToken().isEmpty()) {
        adminToken_ = other.adminToken_;
        onChanged();
      }
      if (other.hasServiceCredentials()) {
        mergeServiceCredentials(other.getServiceCredentials());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      sirup.service.auth.rpc.proto.ServiceTokenRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (sirup.service.auth.rpc.proto.ServiceTokenRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private sirup.service.auth.rpc.proto.CredentialsRpc adminCredentials_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        sirup.service.auth.rpc.proto.CredentialsRpc, sirup.service.auth.rpc.proto.CredentialsRpc.Builder, sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder> adminCredentialsBuilder_;
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public boolean hasAdminCredentials() {
      return adminCredentialsBuilder_ != null || adminCredentials_ != null;
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public sirup.service.auth.rpc.proto.CredentialsRpc getAdminCredentials() {
      if (adminCredentialsBuilder_ == null) {
        return adminCredentials_ == null ? sirup.service.auth.rpc.proto.CredentialsRpc.getDefaultInstance() : adminCredentials_;
      } else {
        return adminCredentialsBuilder_.getMessage();
      }
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public Builder setAdminCredentials(sirup.service.auth.rpc.proto.CredentialsRpc value) {
      if (adminCredentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        adminCredentials_ = value;
        onChanged();
      } else {
        adminCredentialsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public Builder setAdminCredentials(
        sirup.service.auth.rpc.proto.CredentialsRpc.Builder builderForValue) {
      if (adminCredentialsBuilder_ == null) {
        adminCredentials_ = builderForValue.build();
        onChanged();
      } else {
        adminCredentialsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public Builder mergeAdminCredentials(sirup.service.auth.rpc.proto.CredentialsRpc value) {
      if (adminCredentialsBuilder_ == null) {
        if (adminCredentials_ != null) {
          adminCredentials_ =
            sirup.service.auth.rpc.proto.CredentialsRpc.newBuilder(adminCredentials_).mergeFrom(value).buildPartial();
        } else {
          adminCredentials_ = value;
        }
        onChanged();
      } else {
        adminCredentialsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public Builder clearAdminCredentials() {
      if (adminCredentialsBuilder_ == null) {
        adminCredentials_ = null;
        onChanged();
      } else {
        adminCredentials_ = null;
        adminCredentialsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public sirup.service.auth.rpc.proto.CredentialsRpc.Builder getAdminCredentialsBuilder() {
      
      onChanged();
      return getAdminCredentialsFieldBuilder().getBuilder();
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    public sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder getAdminCredentialsOrBuilder() {
      if (adminCredentialsBuilder_ != null) {
        return adminCredentialsBuilder_.getMessageOrBuilder();
      } else {
        return adminCredentials_ == null ?
            sirup.service.auth.rpc.proto.CredentialsRpc.getDefaultInstance() : adminCredentials_;
      }
    }
    /**
     * <code>.auth.v4.CredentialsRpc admin_credentials = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        sirup.service.auth.rpc.proto.CredentialsRpc, sirup.service.auth.rpc.proto.CredentialsRpc.Builder, sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder> 
        getAdminCredentialsFieldBuilder() {
      if (adminCredentialsBuilder_ == null) {
        adminCredentialsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            sirup.service.auth.rpc.proto.CredentialsRpc, sirup.service.auth.rpc.proto.CredentialsRpc.Builder, sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder>(
                getAdminCredentials(),
                getParentForChildren(),
                isClean());
        adminCredentials_ = null;
      }
      return adminCredentialsBuilder_;
    }

    private java.lang.Object adminToken_ = "";
    /**
     * <code>string admin_token = 2;</code>
     */
    public java.lang.String getAdminToken() {
      java.lang.Object ref = adminToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        adminToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string admin_token = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAdminTokenBytes() {
      java.lang.Object ref = adminToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        adminToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string admin_token = 2;</code>
     */
    public Builder setAdminToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      adminToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string admin_token = 2;</code>
     */
    public Builder clearAdminToken() {
      
      adminToken_ = getDefaultInstance().getAdminToken();
      onChanged();
      return this;
    }
    /**
     * <code>string admin_token = 2;</code>
     */
    public Builder setAdminTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      adminToken_ = value;
      onChanged();
      return this;
    }

    private sirup.service.auth.rpc.proto.CredentialsRpc serviceCredentials_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        sirup.service.auth.rpc.proto.CredentialsRpc, sirup.service.auth.rpc.proto.CredentialsRpc.Builder, sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder> serviceCredentialsBuilder_;
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public boolean hasServiceCredentials() {
      return serviceCredentialsBuilder_ != null || serviceCredentials_ != null;
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public sirup.service.auth.rpc.proto.CredentialsRpc getServiceCredentials() {
      if (serviceCredentialsBuilder_ == null) {
        return serviceCredentials_ == null ? sirup.service.auth.rpc.proto.CredentialsRpc.getDefaultInstance() : serviceCredentials_;
      } else {
        return serviceCredentialsBuilder_.getMessage();
      }
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public Builder setServiceCredentials(sirup.service.auth.rpc.proto.CredentialsRpc value) {
      if (serviceCredentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceCredentials_ = value;
        onChanged();
      } else {
        serviceCredentialsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public Builder setServiceCredentials(
        sirup.service.auth.rpc.proto.CredentialsRpc.Builder builderForValue) {
      if (serviceCredentialsBuilder_ == null) {
        serviceCredentials_ = builderForValue.build();
        onChanged();
      } else {
        serviceCredentialsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public Builder mergeServiceCredentials(sirup.service.auth.rpc.proto.CredentialsRpc value) {
      if (serviceCredentialsBuilder_ == null) {
        if (serviceCredentials_ != null) {
          serviceCredentials_ =
            sirup.service.auth.rpc.proto.CredentialsRpc.newBuilder(serviceCredentials_).mergeFrom(value).buildPartial();
        } else {
          serviceCredentials_ = value;
        }
        onChanged();
      } else {
        serviceCredentialsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public Builder clearServiceCredentials() {
      if (serviceCredentialsBuilder_ == null) {
        serviceCredentials_ = null;
        onChanged();
      } else {
        serviceCredentials_ = null;
        serviceCredentialsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public sirup.service.auth.rpc.proto.CredentialsRpc.Builder getServiceCredentialsBuilder() {
      
      onChanged();
      return getServiceCredentialsFieldBuilder().getBuilder();
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    public sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder getServiceCredentialsOrBuilder() {
      if (serviceCredentialsBuilder_ != null) {
        return serviceCredentialsBuilder_.getMessageOrBuilder();
      } else {
        return serviceCredentials_ == null ?
            sirup.service.auth.rpc.proto.CredentialsRpc.getDefaultInstance() : serviceCredentials_;
      }
    }
    /**
     * <code>.auth.v4.CredentialsRpc service_credentials = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        sirup.service.auth.rpc.proto.CredentialsRpc, sirup.service.auth.rpc.proto.CredentialsRpc.Builder, sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder> 
        getServiceCredentialsFieldBuilder() {
      if (serviceCredentialsBuilder_ == null) {
        serviceCredentialsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            sirup.service.auth.rpc.proto.CredentialsRpc, sirup.service.auth.rpc.proto.CredentialsRpc.Builder, sirup.service.auth.rpc.proto.CredentialsRpcOrBuilder>(
                getServiceCredentials(),
                getParentForChildren(),
                isClean());
        serviceCredentials_ = null;
      }
      return serviceCredentialsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:auth.v4.ServiceTokenRequest)
  }

  // @@protoc_insertion_point(class_scope:auth.v4.ServiceTokenRequest)
  private static final sirup.service.auth.rpc.proto.ServiceTokenRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new sirup.service.auth.rpc.proto.ServiceTokenRequest();
  }

  public static sirup.service.auth.rpc.proto.ServiceTokenRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServiceTokenRequest>
      PARSER = new com.google.protobuf.AbstractParser<ServiceTokenRequest>() {
    @java.lang.Override
    public ServiceTokenRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ServiceTokenRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ServiceTokenRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServiceTokenRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public sirup.service.auth.rpc.proto.ServiceTokenRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

